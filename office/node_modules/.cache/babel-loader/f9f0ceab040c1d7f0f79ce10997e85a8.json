{"ast":null,"code":"const initialState = {\n  tempo: [{\n    type: \"CONTENT\",\n    content: \"\"\n  }],\n  editor: {\n    bold: false,\n    color: undefined,\n    align: \"left\",\n    underline: false,\n    size: 15,\n    drag: undefined\n  },\n  post: []\n};\n\nconst test = (state = initialState, {\n  type,\n  payload,\n  index\n}) => {\n  switch (type) {\n    case \"@test/DRAG_ELEMENT\":\n      {\n        return { ...state,\n          editor: { ...state.editor,\n            drag: payload\n          }\n        };\n      }\n\n    case \"@test/CHANGE_SIZE\":\n      {\n        return { ...state,\n          editor: { ...state.editor,\n            size: payload\n          }\n        };\n      }\n\n    case \"@test/CHANGE_UNDER\":\n      {\n        return { ...state,\n          editor: { ...state.editor,\n            underline: payload\n          }\n        };\n      }\n\n    case \"@test/CHANGE_ALIGN\":\n      {\n        return { ...state,\n          editor: { ...state.editor,\n            align: payload\n          }\n        };\n      }\n\n    case \"@test/CHANGE_COLOR\":\n      {\n        return { ...state,\n          editor: { ...state.editor,\n            color: payload\n          }\n        };\n      }\n\n    case \"@test/CHANGE_BOLD\":\n      {\n        // const arr = [...state.tempo]\n        // arr.splice(index, 0, payload)\n        return { ...state,\n          editor: { ...state.editor,\n            bold: payload\n          }\n        };\n      }\n\n    case \"@test/ADD_CONTENT\":\n      {\n        // const arr = [...state.tempo]\n        // arr.splice(index, 0, payload)\n        return { ...state,\n          tempo: payload\n        };\n      }\n\n    case \"@test/UPDATE_CONTENT\":\n      {\n        let arr = [...state.tempo];\n        arr[index].content = payload;\n        return { ...state,\n          tempo: [...arr]\n        };\n      }\n\n    case \"@test/ADD_REF\":\n      {\n        let arr = [...state.tempo];\n        arr[index].ref = payload;\n        return { ...state,\n          tempo: [...arr]\n        };\n      }\n\n    case \"@test/DELETE_CONTENT\":\n      {\n        let arr = [...state.tempo];\n        arr.splice(index, 1);\n        return { ...state,\n          tempo: [...arr]\n        };\n      }\n\n    case \"@test/TESTING\":\n      {\n        return { ...state,\n          post: [...state.post, payload]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default test;","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/kim-con/office/src/reducers/test/index.js"],"names":["initialState","tempo","type","content","editor","bold","color","undefined","align","underline","size","drag","post","test","state","payload","index","arr","ref","splice"],"mappings":"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","sourcesContent":["const initialState = {\n  tempo: [\n    {\n      type: \"CONTENT\",\n      content: \"\",\n    },\n  ],\n  editor: {\n    bold: false,\n    color: undefined,\n    align: \"left\",\n    underline: false,\n    size: 15,\n    drag: undefined,\n  },\n  post: [],\n};\nconst test = (state = initialState, { type, payload, index }) => {\n  switch (type) {\n    case \"@test/DRAG_ELEMENT\": {\n      return {\n        ...state,\n        editor: {\n          ...state.editor,\n          drag: payload,\n        },\n      };\n    }\n    case \"@test/CHANGE_SIZE\": {\n      return {\n        ...state,\n        editor: {\n          ...state.editor,\n          size: payload,\n        },\n      };\n    }\n    case \"@test/CHANGE_UNDER\": {\n      return {\n        ...state,\n        editor: {\n          ...state.editor,\n          underline: payload,\n        },\n      };\n    }\n    case \"@test/CHANGE_ALIGN\": {\n      return {\n        ...state,\n        editor: {\n          ...state.editor,\n          align: payload,\n        },\n      };\n    }\n    case \"@test/CHANGE_COLOR\": {\n      return {\n        ...state,\n        editor: {\n          ...state.editor,\n          color: payload,\n        },\n      };\n    }\n    case \"@test/CHANGE_BOLD\": {\n      // const arr = [...state.tempo]\n      // arr.splice(index, 0, payload)\n      return {\n        ...state,\n        editor: {\n          ...state.editor,\n          bold: payload,\n        },\n      };\n    }\n    case \"@test/ADD_CONTENT\": {\n      // const arr = [...state.tempo]\n      // arr.splice(index, 0, payload)\n      return {\n        ...state,\n        tempo: payload,\n      };\n    }\n    case \"@test/UPDATE_CONTENT\": {\n      let arr = [...state.tempo];\n      arr[index].content = payload;\n      return {\n        ...state,\n        tempo: [...arr],\n      };\n    }\n    case \"@test/ADD_REF\": {\n      let arr = [...state.tempo];\n      arr[index].ref = payload;\n      return {\n        ...state,\n        tempo: [...arr],\n      };\n    }\n    case \"@test/DELETE_CONTENT\": {\n      let arr = [...state.tempo];\n      arr.splice(index, 1);\n      return {\n        ...state,\n        tempo: [...arr],\n      };\n    }\n    case \"@test/TESTING\": {\n      return {\n        ...state,\n        post: [...state.post, payload],\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default test;\n"]},"metadata":{},"sourceType":"module"}