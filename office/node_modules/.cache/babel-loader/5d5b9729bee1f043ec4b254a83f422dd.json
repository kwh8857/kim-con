{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Template/TemplateImage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TemplateEmty from \"./TemplateEmty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TemplateImage({\n  data: {\n    resize,\n    url\n  },\n  provided,\n  setFocus,\n  focusIdx,\n  idx,\n  template\n}) {\n  _s();\n\n  const [now, setnow] = useState(resize);\n  useEffect(() => {\n    const load = new Image();\n    load.src = url;\n\n    load.onload = e => {\n      console.log(e);\n      setnow(url);\n    };\n\n    return () => {};\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [idx === 0 ? /*#__PURE__*/_jsxDEV(TemplateEmty, {\n      idx: idx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }, this) : undefined, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `template-img ${focusIdx === idx ? \"active-blue\" : \"\"}`,\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      onClick: () => {\n        setFocus(idx);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: now,\n        alt: \"\\uC774\\uBBF8\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), !template[idx + 1] || template[idx + 1].type !== \"TITLE\" ? /*#__PURE__*/_jsxDEV(TemplateEmty, {\n      idx: idx + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : undefined]\n  }, void 0, true);\n}\n\n_s(TemplateImage, \"mXCfiVmwOLXATNXf0iQaYZeDQ4s=\");\n\n_c = TemplateImage;\nexport default TemplateImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemplateImage\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Template/TemplateImage.jsx"],"names":["React","useState","useEffect","TemplateEmty","TemplateImage","data","resize","url","provided","setFocus","focusIdx","idx","template","now","setnow","load","Image","src","onload","e","console","log","undefined","innerRef","draggableProps","dragHandleProps","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,SAASC,aAAT,CAAuB;AACrBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GADe;AAErBC,EAAAA,QAFqB;AAGrBC,EAAAA,QAHqB;AAIrBC,EAAAA,QAJqB;AAKrBC,EAAAA,GALqB;AAMrBC,EAAAA;AANqB,CAAvB,EAOG;AAAA;;AACD,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAACK,MAAD,CAA9B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,IAAI,GAAG,IAAIC,KAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,GAAL,GAAWV,GAAX;;AACAQ,IAAAA,IAAI,CAACG,MAAL,GAAeC,CAAD,IAAO;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAL,MAAAA,MAAM,CAACP,GAAD,CAAN;AACD,KAHD;;AAIA,WAAO,MAAM,CAAE,CAAf;AACD,GARQ,EAQN,CAACA,GAAD,CARM,CAAT;AASA,sBACE;AAAA,eACGI,GAAG,KAAK,CAAR,gBAAY,QAAC,YAAD;AAAc,MAAA,GAAG,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAZ,GAAyCW,SAD5C,eAEE;AACE,MAAA,SAAS,EAAG,gBAAeZ,QAAQ,KAAKC,GAAb,GAAmB,aAAnB,GAAmC,EAAG,EADnE;AAEE,MAAA,GAAG,EAAEH,QAAQ,CAACe,QAFhB;AAAA,SAGMf,QAAQ,CAACgB,cAHf;AAAA,SAIMhB,QAAQ,CAACiB,eAJf;AAKE,MAAA,OAAO,EAAE,MAAM;AACbhB,QAAAA,QAAQ,CAACE,GAAD,CAAR;AACD,OAPH;AAAA,6BASE;AAAK,QAAA,GAAG,EAAEE,GAAV;AAAe,QAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YAFF,EAaG,CAACD,QAAQ,CAACD,GAAG,GAAG,CAAP,CAAT,IAAsBC,QAAQ,CAACD,GAAG,GAAG,CAAP,CAAR,CAAkBe,IAAlB,KAA2B,OAAjD,gBACC,QAAC,YAAD;AAAc,MAAA,GAAG,EAAEf,GAAG,GAAG;AAAzB;AAAA;AAAA;AAAA;AAAA,YADD,GAEGW,SAfN;AAAA,kBADF;AAmBD;;GArCQlB,a;;KAAAA,a;AAuCT,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TemplateEmty from \"./TemplateEmty\";\n\nfunction TemplateImage({\n  data: { resize, url },\n  provided,\n  setFocus,\n  focusIdx,\n  idx,\n  template,\n}) {\n  const [now, setnow] = useState(resize);\n  useEffect(() => {\n    const load = new Image();\n    load.src = url;\n    load.onload = (e) => {\n      console.log(e);\n      setnow(url);\n    };\n    return () => {};\n  }, [url]);\n  return (\n    <>\n      {idx === 0 ? <TemplateEmty idx={idx} /> : undefined}\n      <div\n        className={`template-img ${focusIdx === idx ? \"active-blue\" : \"\"}`}\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        onClick={() => {\n          setFocus(idx);\n        }}\n      >\n        <img src={now} alt=\"이미지\" />\n      </div>\n      {!template[idx + 1] || template[idx + 1].type !== \"TITLE\" ? (\n        <TemplateEmty idx={idx + 1} />\n      ) : undefined}\n    </>\n  );\n}\n\nexport default TemplateImage;\n"]},"metadata":{},"sourceType":"module"}