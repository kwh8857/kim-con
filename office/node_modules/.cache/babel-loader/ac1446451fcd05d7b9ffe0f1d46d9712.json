{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Insert.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport firebaseApp from \"@config/firebaseApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummy = [{\n  img: \"temp\",\n  type: \"IMAGE\"\n}, {\n  img: \"video\",\n  type: \"VIDEO\"\n}, {\n  img: \"youtube\",\n  type: \"YOUTUBE\"\n}, {\n  img: \"link\",\n  type: \"LINK\"\n}, {\n  img: \"file\",\n  type: \"FILE\"\n}];\nconst Fstorage = firebaseApp.storage();\n\nfunction Insert({\n  setIsUp\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const template = useSelector(state => state.database.editor);\n\n  const __imageUpload = useCallback((data64, name) => {\n    return new Promise((resolve, reject) => {\n      const data = data64.split(\",\")[1];\n      Fstorage.ref(`kwak/${name}`).putString(data, \"base64\").then(result => {\n        result.ref.getDownloadURL().then(downloadUrl => {\n          resolve(downloadUrl);\n        });\n      });\n    });\n  }, []);\n\n  const __fileReader = useCallback(file => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        const imageUrl = e.target.result;\n        resolve({\n          url: imageUrl,\n          name: file.name\n        });\n      };\n\n      reader.readAsDataURL(file);\n    });\n  }, []);\n\n  const __imageUpdate = useCallback(e => {\n    let fileList = Object.values(e.target.files);\n    const base64 = Promise.all(fileList.map(item => {\n      const da = __fileReader(item).then(result => {\n        return result;\n      });\n\n      return da;\n    }));\n    base64.then(result => {\n      Promise.all(result.map(({\n        url,\n        name\n      }) => {\n        const po = __imageUpload(url, name).then(result => {\n          return {\n            type: \"IMAGE\",\n            content: result,\n            id: `image-${new Date().getTime() - Math.floor(Math.random() * (100 - 1 + 1)) + 1}`\n          };\n        });\n\n        return po;\n      })).then(result => {\n        const arr = template.slice();\n        dispatch({\n          type: \"@layouts/CHANGE_EDITOR\",\n          payload: [...arr, ...result]\n        });\n      });\n    });\n  }, [__imageUpload, __fileReader, template, dispatch]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insert-wrapper\",\n    children: dummy.map(({\n      img,\n      type\n    }, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"test-img\",\n        onClick: () => {\n          if (type !== \"IMAGE\") {\n            setIsUp({\n              status: true,\n              type: type\n            });\n          }\n        },\n        children: [type === \"IMAGE\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          style: {\n            opacity: 0\n          },\n          multiple: true,\n          accept: \"image/x-png,image/gif,image/jpeg\",\n          onChange: __imageUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this) : undefined, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/assets/editor/${img}.svg`,\n          alt: `${img}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Insert, \"FvyDF0nARGnDekJAKhoXLiJmacU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Insert;\nexport default Insert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Insert.jsx"],"names":["React","useCallback","useSelector","useDispatch","firebaseApp","dummy","img","type","Fstorage","storage","Insert","setIsUp","dispatch","template","state","database","editor","__imageUpload","data64","name","Promise","resolve","reject","data","split","ref","putString","then","result","getDownloadURL","downloadUrl","__fileReader","file","reader","FileReader","onload","e","imageUrl","target","url","readAsDataURL","__imageUpdate","fileList","Object","values","files","base64","all","map","item","da","po","content","id","Date","getTime","Math","floor","random","arr","slice","payload","idx","status","opacity","undefined"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport firebaseApp from \"@config/firebaseApp\";\nconst dummy = [\n  { img: \"temp\", type: \"IMAGE\" },\n  { img: \"video\", type: \"VIDEO\" },\n  { img: \"youtube\", type: \"YOUTUBE\" },\n  { img: \"link\", type: \"LINK\" },\n  { img: \"file\", type: \"FILE\" },\n];\n\nconst Fstorage = firebaseApp.storage();\n\nfunction Insert({ setIsUp }) {\n  const dispatch = useDispatch();\n  const template = useSelector((state) => state.database.editor);\n\n  const __imageUpload = useCallback((data64, name) => {\n    return new Promise((resolve, reject) => {\n      const data = data64.split(\",\")[1];\n      Fstorage.ref(`kwak/${name}`)\n        .putString(data, \"base64\")\n        .then((result) => {\n          result.ref.getDownloadURL().then((downloadUrl) => {\n            resolve(downloadUrl);\n          });\n        });\n    });\n  }, []);\n  const __fileReader = useCallback((file) => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        const imageUrl = e.target.result;\n        resolve({ url: imageUrl, name: file.name });\n      };\n      reader.readAsDataURL(file);\n    });\n  }, []);\n  const __imageUpdate = useCallback(\n    (e) => {\n      let fileList = Object.values(e.target.files);\n      const base64 = Promise.all(\n        fileList.map((item) => {\n          const da = __fileReader(item).then((result) => {\n            return result;\n          });\n          return da;\n        })\n      );\n      base64.then((result) => {\n        Promise.all(\n          result.map(({ url, name }) => {\n            const po = __imageUpload(url, name).then((result) => {\n              return {\n                type: \"IMAGE\",\n                content: result,\n                id: `image-${\n                  new Date().getTime() -\n                  Math.floor(Math.random() * (100 - 1 + 1)) +\n                  1\n                }`,\n              };\n            });\n            return po;\n          })\n        ).then((result) => {\n          const arr = template.slice();\n          dispatch({\n            type: \"@layouts/CHANGE_EDITOR\",\n            payload: [...arr, ...result],\n          });\n        });\n      });\n    },\n    [__imageUpload, __fileReader, template, dispatch]\n  );\n  return (\n    <div className=\"insert-wrapper\">\n      {dummy.map(({ img, type }, idx) => {\n        return (\n          <label\n            className=\"test-img\"\n            key={idx}\n            onClick={() => {\n              if (type !== \"IMAGE\") {\n                setIsUp({\n                  status: true,\n                  type: type,\n                });\n              }\n            }}\n          >\n            {type === \"IMAGE\" ? (\n              <input\n                type=\"file\"\n                style={{ opacity: 0 }}\n                multiple={true}\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                onChange={__imageUpdate}\n              />\n            ) : undefined}\n            <img src={`/assets/editor/${img}.svg`} alt={`${img}`} />\n          </label>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Insert;\n"]},"metadata":{},"sourceType":"module"}