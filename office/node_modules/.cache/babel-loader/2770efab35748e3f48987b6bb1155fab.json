{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/Editor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./css/index.css\";\nimport EdiHeader from \"./components/EdiHeader\";\nimport Screen from \"./components/Screen\";\nimport Popup from \"./components/Popup\";\nimport Header from \"../Header/Header\";\nimport firebaseApp from \"../config/firebaseApp\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Beforeunload, useBeforeunload } from \"react-beforeunload\";\nimport { Prompt } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Fstore = firebaseApp.firestore();\n\nfunction Editor({\n  location\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const temKey = useSelector(state => state.database.key);\n  const template = useSelector(state => state.database.editor);\n  const [isUp, setIsUp] = useState({\n    status: false,\n    type: \"\"\n  });\n  const [isTest, setIsTest] = useState(false);\n\n  const __updateData = useCallback(() => {\n    Fstore.collection(\"editor\").doc(temKey).update({\n      template: template\n    });\n  }, [temKey, template]);\n\n  useBeforeunload(e => {\n    e.preventDefault();\n  });\n  useEffect(() => {\n    if (location.state.type === \"new\") {\n      Fstore.collection(\"editor\").add({\n        timestamp: Date.now()\n      }).then(res => {\n        dispatch({\n          type: \"@layouts/INIT_KEY\",\n          payload: res.id\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    return () => {};\n  }, [dispatch, location]);\n  useEffect(() => {\n    setIsTest(false);\n    return () => {\n      setIsTest(true);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: isTest,\n      message: \"\\uB098\\uAC08\\uAC70\\uC784?\" // message={(location, action) => {\n      //   console.log(action);\n      //   console.log(location);\n      //   return \"나갈거임?\";\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Beforeunload, {\n      onBeforeunload: e => {\n        console.log(\"나갑니다\");\n\n        __updateData();\n\n        e.preventDefault();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(EdiHeader, {\n            setIsUp: setIsUp,\n            temKey: temKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Screen, {\n            temKey: temKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popup, {\n          isUp: isUp,\n          setIsUp: setIsUp,\n          temKey: temKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Editor, \"TwYBfaaoOply70E23MpLCQtzX5o=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useBeforeunload];\n});\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/Editor.jsx"],"names":["React","useState","useEffect","useCallback","EdiHeader","Screen","Popup","Header","firebaseApp","useDispatch","useSelector","Beforeunload","useBeforeunload","Prompt","Fstore","firestore","Editor","location","dispatch","temKey","state","database","key","template","editor","isUp","setIsUp","status","type","isTest","setIsTest","__updateData","collection","doc","update","e","preventDefault","add","timestamp","Date","now","then","res","payload","id","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,oBAA9C;AACA,SAASC,MAAT,QAAuB,kBAAvB;;;AACA,MAAMC,MAAM,GAAGN,WAAW,CAACO,SAAZ,EAAf;;AACA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8B;AAAA;;AAC5B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,GAA3B,CAA1B;AACA,QAAMC,QAAQ,GAAGb,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeG,MAA3B,CAA5B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC;AAC/B0B,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,IAAI,EAAE;AAFyB,GAAD,CAAhC;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAM8B,YAAY,GAAG5B,WAAW,CAAC,MAAM;AACrCW,IAAAA,MAAM,CAACkB,UAAP,CAAkB,QAAlB,EAA4BC,GAA5B,CAAgCd,MAAhC,EAAwCe,MAAxC,CAA+C;AAAEX,MAAAA,QAAQ,EAAEA;AAAZ,KAA/C;AACD,GAF+B,EAE7B,CAACJ,MAAD,EAASI,QAAT,CAF6B,CAAhC;;AAGAX,EAAAA,eAAe,CAAEuB,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFc,CAAf;AAIAlC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,QAAQ,CAACG,KAAT,CAAeQ,IAAf,KAAwB,KAA5B,EAAmC;AACjCd,MAAAA,MAAM,CAACkB,UAAP,CAAkB,QAAlB,EACGK,GADH,CACO;AAAEC,QAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAb,OADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbxB,QAAAA,QAAQ,CAAC;AACPU,UAAAA,IAAI,EAAE,mBADC;AAEPe,UAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,SAAD,CAAR;AAID,OAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAVH;AAWD;;AACD,WAAO,MAAM,CAAE,CAAf;AACD,GAfQ,EAeN,CAAC5B,QAAD,EAAWD,QAAX,CAfM,CAAT;AAgBAf,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA,WAAO,MAAM;AACXA,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,IAAI,EAAED,MADR;AAEE,MAAA,OAAO,EAAC,2BAFV,CAGE;AACA;AACA;AACA;AACA;;AAPF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,YAAD;AACE,MAAA,cAAc,EAAGM,CAAD,IAAO;AACrBY,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACAjB,QAAAA,YAAY;;AACZI,QAAAA,CAAC,CAACC,cAAF;AACD,OALH;AAAA,6BAOE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,OAAO,EAAEV,OAApB;AAA6B,YAAA,MAAM,EAAEP;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEM,IAAb;AAAmB,UAAA,OAAO,EAAEC,OAA5B;AAAqC,UAAA,MAAM,EAAEP;AAA7C;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AA6BD;;GApEQH,M;UACUP,W,EACFC,W,EACEA,W,EAUjBE,e;;;KAbOI,M;AAsET,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./css/index.css\";\nimport EdiHeader from \"./components/EdiHeader\";\nimport Screen from \"./components/Screen\";\nimport Popup from \"./components/Popup\";\nimport Header from \"../Header/Header\";\nimport firebaseApp from \"../config/firebaseApp\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Beforeunload, useBeforeunload } from \"react-beforeunload\";\nimport { Prompt } from \"react-router-dom\";\nconst Fstore = firebaseApp.firestore();\nfunction Editor({ location }) {\n  const dispatch = useDispatch();\n  const temKey = useSelector((state) => state.database.key);\n  const template = useSelector((state) => state.database.editor);\n\n  const [isUp, setIsUp] = useState({\n    status: false,\n    type: \"\",\n  });\n  const [isTest, setIsTest] = useState(false);\n  const __updateData = useCallback(() => {\n    Fstore.collection(\"editor\").doc(temKey).update({ template: template });\n  }, [temKey, template]);\n  useBeforeunload((e) => {\n    e.preventDefault();\n  });\n\n  useEffect(() => {\n    if (location.state.type === \"new\") {\n      Fstore.collection(\"editor\")\n        .add({ timestamp: Date.now() })\n        .then((res) => {\n          dispatch({\n            type: \"@layouts/INIT_KEY\",\n            payload: res.id,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    return () => {};\n  }, [dispatch, location]);\n  useEffect(() => {\n    setIsTest(false);\n    return () => {\n      setIsTest(true);\n    };\n  }, []);\n  return (\n    <>\n      <Prompt\n        when={isTest}\n        message=\"나갈거임?\"\n        // message={(location, action) => {\n        //   console.log(action);\n        //   console.log(location);\n        //   return \"나갈거임?\";\n        // }}\n      />\n      <Beforeunload\n        onBeforeunload={(e) => {\n          console.log(\"나갑니다\");\n          __updateData();\n          e.preventDefault();\n        }}\n      >\n        <div className=\"editor\">\n          <Header />\n          <div className=\"editor-wrapper\">\n            <EdiHeader setIsUp={setIsUp} temKey={temKey} />\n            <Screen temKey={temKey} />\n          </div>\n          <Popup isUp={isUp} setIsUp={setIsUp} temKey={temKey} />\n        </div>\n      </Beforeunload>\n    </>\n  );\n}\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}