{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Insert.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport firebaseApp from \"../../../config/firebaseApp\";\nimport Resizer from \"react-image-file-resizer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummy = [{\n  img: \"summary\",\n  type: \"SUMMARY\"\n}, {\n  img: \"temp\",\n  type: \"IMAGE\"\n}, {\n  img: \"video\",\n  type: \"VIDEO\"\n} // { img: \"youtube\", type: \"YOUTUBE\" },\n// { img: \"link\", type: \"LINK\" },\n// { img: \"file\", type: \"FILE\" },\n];\nconst Fstorage = firebaseApp.storage();\n\nfunction Insert({\n  setIsUp\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const template = useSelector(state => state.database.editor);\n  const temKey = useSelector(state => state.database.key);\n\n  const __imageUpload = useCallback((data64, name, resize) => {\n    return new Promise((resolve, reject) => {\n      const data = data64.split(\",\")[1];\n      const redata = resize.split(\",\")[1];\n      Fstorage.ref(`editor/${temKey}/${name}`).putString(data, \"base64\").then(result => {\n        result.ref.getDownloadURL().then(downloadUrl => {\n          Fstorage.ref(`editor/${name}-resize`).putString(redata, \"base64\").then(result => {\n            result.ref.getDownloadURL().then(resizeUrl => {\n              resolve({\n                url: downloadUrl,\n                resize: resizeUrl\n              });\n            });\n          });\n        });\n      });\n    });\n  }, []);\n\n  const __fileReader = useCallback(file => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        const imageUrl = e.target.result;\n        Resizer.imageFileResizer(file, 50, 50, \"JPEG\", 100, 0, uri => {\n          resolve({\n            url: imageUrl,\n            resize: uri,\n            name: file.name\n          });\n        }, \"base64\");\n      };\n\n      reader.readAsDataURL(file);\n    });\n  }, []);\n\n  const __imageUpdate = useCallback(e => {\n    let fileList = Object.values(e.target.files);\n    const base64 = Promise.all(fileList.map(item => {\n      const da = __fileReader(item).then(result => {\n        return result;\n      });\n\n      return da;\n    }));\n    base64.then(result => {\n      Promise.all(result.map(({\n        url,\n        name,\n        resize\n      }) => {\n        const po = __imageUpload(url, name, resize).then(result => {\n          return {\n            type: \"IMAGE\",\n            content: result,\n            id: `image-${new Date().getTime() - Math.floor(Math.random() * (100 - 1 + 1)) + 1}`\n          };\n        });\n\n        return po;\n      })).then(result => {\n        const arr = template.slice();\n        dispatch({\n          type: \"@layouts/CHANGE_EDITOR\",\n          payload: [...arr, ...result]\n        });\n      });\n    });\n  }, [__imageUpload, __fileReader, template, dispatch]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insert-wrapper\",\n    children: dummy.map(({\n      img,\n      type\n    }, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"test-img\",\n        onClick: () => {\n          if (type !== \"IMAGE\" && type !== \"SUMMARY\") {\n            setIsUp({\n              status: true,\n              type: type\n            });\n          } else if (type === \"SUMMARY\") {\n            let arr = template.slice();\n            arr.push({\n              type: \"SUMMARY\",\n              content: {\n                text: \"\",\n                images: []\n              },\n              id: `summary-${new Date().getTime() - Math.floor(Math.random() * (100 - 1 + 1)) + 1}`\n            });\n            dispatch({\n              type: \"@layouts/CHANGE_EDITOR\",\n              payload: arr\n            });\n          }\n        },\n        children: [type === \"IMAGE\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          style: {\n            opacity: 0\n          },\n          multiple: true,\n          accept: \"image/x-png,image/gif,image/jpeg\",\n          onChange: __imageUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this) : undefined, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/assets/editor/${img}.svg`,\n          alt: `${img}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Insert, \"z7Yd4pgUkaKhbeXQGsFP0gjm07M=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Insert;\nexport default Insert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Insert.jsx"],"names":["React","useCallback","useSelector","useDispatch","firebaseApp","Resizer","dummy","img","type","Fstorage","storage","Insert","setIsUp","dispatch","template","state","database","editor","temKey","key","__imageUpload","data64","name","resize","Promise","resolve","reject","data","split","redata","ref","putString","then","result","getDownloadURL","downloadUrl","resizeUrl","url","__fileReader","file","reader","FileReader","onload","e","imageUrl","target","imageFileResizer","uri","readAsDataURL","__imageUpdate","fileList","Object","values","files","base64","all","map","item","da","po","content","id","Date","getTime","Math","floor","random","arr","slice","payload","idx","status","push","text","images","opacity","undefined"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport firebaseApp from \"../../../config/firebaseApp\";\nimport Resizer from \"react-image-file-resizer\";\nconst dummy = [\n  { img: \"summary\", type: \"SUMMARY\" },\n  { img: \"temp\", type: \"IMAGE\" },\n  { img: \"video\", type: \"VIDEO\" },\n  // { img: \"youtube\", type: \"YOUTUBE\" },\n  // { img: \"link\", type: \"LINK\" },\n  // { img: \"file\", type: \"FILE\" },\n];\n\nconst Fstorage = firebaseApp.storage();\n\nfunction Insert({ setIsUp }) {\n  const dispatch = useDispatch();\n  const template = useSelector((state) => state.database.editor);\n  const temKey = useSelector((state) => state.database.key);\n  const __imageUpload = useCallback((data64, name, resize) => {\n    return new Promise((resolve, reject) => {\n      const data = data64.split(\",\")[1];\n      const redata = resize.split(\",\")[1];\n      Fstorage.ref(`editor/${temKey}/${name}`)\n        .putString(data, \"base64\")\n        .then((result) => {\n          result.ref.getDownloadURL().then((downloadUrl) => {\n            Fstorage.ref(`editor/${name}-resize`)\n              .putString(redata, \"base64\")\n              .then((result) => {\n                result.ref.getDownloadURL().then((resizeUrl) => {\n                  resolve({ url: downloadUrl, resize: resizeUrl });\n                });\n              });\n          });\n        });\n    });\n  }, []);\n  const __fileReader = useCallback((file) => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onload = function (e) {\n        const imageUrl = e.target.result;\n        Resizer.imageFileResizer(\n          file,\n          50,\n          50,\n          \"JPEG\",\n          100,\n          0,\n          (uri) => {\n            resolve({ url: imageUrl, resize: uri, name: file.name });\n          },\n          \"base64\"\n        );\n      };\n      reader.readAsDataURL(file);\n    });\n  }, []);\n  const __imageUpdate = useCallback(\n    (e) => {\n      let fileList = Object.values(e.target.files);\n      const base64 = Promise.all(\n        fileList.map((item) => {\n          const da = __fileReader(item).then((result) => {\n            return result;\n          });\n          return da;\n        })\n      );\n      base64.then((result) => {\n        Promise.all(\n          result.map(({ url, name, resize }) => {\n            const po = __imageUpload(url, name, resize).then((result) => {\n              return {\n                type: \"IMAGE\",\n                content: result,\n                id: `image-${\n                  new Date().getTime() -\n                  Math.floor(Math.random() * (100 - 1 + 1)) +\n                  1\n                }`,\n              };\n            });\n            return po;\n          })\n        ).then((result) => {\n          const arr = template.slice();\n          dispatch({\n            type: \"@layouts/CHANGE_EDITOR\",\n            payload: [...arr, ...result],\n          });\n        });\n      });\n    },\n    [__imageUpload, __fileReader, template, dispatch]\n  );\n  return (\n    <div className=\"insert-wrapper\">\n      {dummy.map(({ img, type }, idx) => {\n        return (\n          <label\n            className=\"test-img\"\n            key={idx}\n            onClick={() => {\n              if (type !== \"IMAGE\" && type !== \"SUMMARY\") {\n                setIsUp({\n                  status: true,\n                  type: type,\n                });\n              } else if (type === \"SUMMARY\") {\n                let arr = template.slice();\n                arr.push({\n                  type: \"SUMMARY\",\n                  content: {\n                    text: \"\",\n                    images: [],\n                  },\n                  id: `summary-${\n                    new Date().getTime() -\n                    Math.floor(Math.random() * (100 - 1 + 1)) +\n                    1\n                  }`,\n                });\n                dispatch({\n                  type: \"@layouts/CHANGE_EDITOR\",\n                  payload: arr,\n                });\n              }\n            }}\n          >\n            {type === \"IMAGE\" ? (\n              <input\n                type=\"file\"\n                style={{ opacity: 0 }}\n                multiple={true}\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                onChange={__imageUpdate}\n              />\n            ) : undefined}\n            <img src={`/assets/editor/${img}.svg`} alt={`${img}`} />\n          </label>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Insert;\n"]},"metadata":{},"sourceType":"module"}