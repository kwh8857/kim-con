{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/Editor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./css/index.css\";\nimport EdiHeader from \"./components/EdiHeader\";\nimport Screen from \"./components/Screen\";\nimport Popup from \"./components/Popup\";\nimport Header from \"../Header/Header\";\nimport firebaseApp from \"../config/firebaseApp\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Beforeunload } from \"react-beforeunload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fstore = firebaseApp.firestore();\n\nfunction Editor() {\n  _s();\n\n  const dispatch = useDispatch();\n  const temKey = useSelector(state => state.database.key);\n  const template = useSelector(state => state.database.editor);\n  const [isUp, setIsUp] = useState({\n    status: false,\n    type: \"\"\n  });\n\n  const __updateData = useCallback(() => {\n    Fstore.collection(\"editor\").doc(temKey).update(template);\n  }, [temKey, template]);\n\n  useEffect(() => {\n    Fstore.collection(\"editor\").add({\n      timestamp: Date.now()\n    }).then(res => {\n      dispatch({\n        type: \"@layouts/INIT_KEY\",\n        payload: res.id\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    return () => {};\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Beforeunload, {\n    onBeforeunload: e => {\n      console.log(e);\n      e.preventDefault();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(EdiHeader, {\n          setIsUp: setIsUp,\n          temKey: temKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Screen, {\n          temKey: temKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        isUp: isUp,\n        setIsUp: setIsUp,\n        temKey: temKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editor, \"bYbwj1vvVOIdNuXojjpykJ82ApY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/Editor.jsx"],"names":["React","useState","useEffect","useCallback","EdiHeader","Screen","Popup","Header","firebaseApp","useDispatch","useSelector","Beforeunload","Fstore","firestore","Editor","dispatch","temKey","state","database","key","template","editor","isUp","setIsUp","status","type","__updateData","collection","doc","update","add","timestamp","Date","now","then","res","payload","id","catch","err","console","log","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AACA,MAAMC,MAAM,GAAGJ,WAAW,CAACK,SAAZ,EAAf;;AACA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,MAAM,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,GAA3B,CAA1B;AACA,QAAMC,QAAQ,GAAGV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeG,MAA3B,CAA5B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC;AAC/BuB,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,IAAI,EAAE;AAFyB,GAAD,CAAhC;;AAIA,QAAMC,YAAY,GAAGvB,WAAW,CAAC,MAAM;AACrCS,IAAAA,MAAM,CAACe,UAAP,CAAkB,QAAlB,EAA4BC,GAA5B,CAAgCZ,MAAhC,EAAwCa,MAAxC,CAA+CT,QAA/C;AACD,GAF+B,EAE7B,CAACJ,MAAD,EAASI,QAAT,CAF6B,CAAhC;;AAGAlB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,CAACe,UAAP,CAAkB,QAAlB,EACGG,GADH,CACO;AAAEC,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAb,KADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbpB,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAE,mBADC;AAEPW,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAVH;AAWA,WAAO,MAAM,CAAE,CAAf;AACD,GAbQ,EAaN,CAACxB,QAAD,CAbM,CAAT;AAcA,sBACE,QAAC,YAAD;AACE,IAAA,cAAc,EAAG2B,CAAD,IAAO;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACAA,MAAAA,CAAC,CAACC,cAAF;AACD,KAJH;AAAA,2BAME;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEpB,OAApB;AAA6B,UAAA,MAAM,EAAEP;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEM,IAAb;AAAmB,QAAA,OAAO,EAAEC,OAA5B;AAAqC,QAAA,MAAM,EAAEP;AAA7C;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA1CQF,M;UACUL,W,EACFC,W,EACEA,W;;;KAHVI,M;AA4CT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./css/index.css\";\nimport EdiHeader from \"./components/EdiHeader\";\nimport Screen from \"./components/Screen\";\nimport Popup from \"./components/Popup\";\nimport Header from \"../Header/Header\";\nimport firebaseApp from \"../config/firebaseApp\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Beforeunload } from \"react-beforeunload\";\nconst Fstore = firebaseApp.firestore();\nfunction Editor() {\n  const dispatch = useDispatch();\n  const temKey = useSelector((state) => state.database.key);\n  const template = useSelector((state) => state.database.editor);\n  const [isUp, setIsUp] = useState({\n    status: false,\n    type: \"\",\n  });\n  const __updateData = useCallback(() => {\n    Fstore.collection(\"editor\").doc(temKey).update(template);\n  }, [temKey, template]);\n  useEffect(() => {\n    Fstore.collection(\"editor\")\n      .add({ timestamp: Date.now() })\n      .then((res) => {\n        dispatch({\n          type: \"@layouts/INIT_KEY\",\n          payload: res.id,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return () => {};\n  }, [dispatch]);\n  return (\n    <Beforeunload\n      onBeforeunload={(e) => {\n        console.log(e);\n        e.preventDefault();\n      }}\n    >\n      <div className=\"editor\">\n        <Header />\n        <div className=\"editor-wrapper\">\n          <EdiHeader setIsUp={setIsUp} temKey={temKey} />\n          <Screen temKey={temKey} />\n        </div>\n        <Popup isUp={isUp} setIsUp={setIsUp} temKey={temKey} />\n      </div>\n    </Beforeunload>\n  );\n}\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}