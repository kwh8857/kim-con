{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/Editor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./css/index.css\";\nimport EdiHeader from \"./components/EdiHeader\";\nimport Screen from \"./components/Screen\";\nimport Popup from \"./components/Popup\";\nimport Header from \"../Header/Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useBeforeunload } from \"react-beforeunload\";\nimport { Prompt } from \"react-router-dom\";\nimport firebaseApp from \"../config/firebaseApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Fstore = firebaseApp.firestore();\n\nfunction Editor({\n  location\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const temKey = useSelector(state => state.database.key);\n  const template = useSelector(state => state.database.editor);\n  const [isUp, setIsUp] = useState({\n    status: false,\n    type: \"\"\n  });\n\n  const __updateData = useCallback(() => {\n    Fstore.collection(\"editor\").doc(temKey).update({\n      template: template\n    }).then(res => {\n      console.log(res);\n    });\n  }, [temKey, template]);\n\n  useBeforeunload(e => {\n    e.preventDefault();\n\n    __updateData();\n\n    console.log(\"무슨일이고?\");\n  });\n  useEffect(() => {\n    const {\n      type,\n      timestamp,\n      category,\n      id\n    } = location.state;\n\n    if (type === \"new\") {\n      Fstore.collection(\"editor\").add({\n        timestamp: timestamp,\n        state: category\n      }).then(res => {\n        dispatch({\n          type: \"@layouts/INIT_KEY\",\n          payload: res.id\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      Fstore.collection(\"editor\").doc(id).get().then(result => {\n        console.log(\"불러옴\");\n        dispatch({\n          type: \"@layouts/CHANGE_EDITOR\",\n          payload: result.data().template\n        });\n      });\n      dispatch({\n        type: \"@layouts/INIT_KEY\",\n        payload: id\n      });\n    }\n\n    return () => {};\n  }, [dispatch, location]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      message: () => {\n        __updateData();\n\n        return \"템플릿을 저장하고 나가시겠습니까?\";\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(EdiHeader, {\n          setIsUp: setIsUp,\n          temKey: temKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Screen, {\n          temKey: temKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        isUp: isUp,\n        setIsUp: setIsUp,\n        temKey: temKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Editor, \"05ovTMnuRbxVH00gMEUT2x0ZGJM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useBeforeunload];\n});\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/Editor.jsx"],"names":["React","useState","useEffect","useCallback","EdiHeader","Screen","Popup","Header","useDispatch","useSelector","useBeforeunload","Prompt","firebaseApp","Fstore","firestore","Editor","location","dispatch","temKey","state","database","key","template","editor","isUp","setIsUp","status","type","__updateData","collection","doc","update","then","res","console","log","e","preventDefault","timestamp","category","id","add","payload","catch","err","get","result","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AACA,MAAMC,MAAM,GAAGD,WAAW,CAACE,SAAZ,EAAf;;AACA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8B;AAAA;;AAC5B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,GAA3B,CAA1B;AACA,QAAMC,QAAQ,GAAGb,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeG,MAA3B,CAA5B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC;AAC/ByB,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,IAAI,EAAE;AAFyB,GAAD,CAAhC;;AAIA,QAAMC,YAAY,GAAGzB,WAAW,CAAC,MAAM;AACrCU,IAAAA,MAAM,CAACgB,UAAP,CAAkB,QAAlB,EACGC,GADH,CACOZ,MADP,EAEGa,MAFH,CAEU;AAAET,MAAAA,QAAQ,EAAEA;AAAZ,KAFV,EAGGU,IAHH,CAGSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KALH;AAMD,GAP+B,EAO7B,CAACf,MAAD,EAASI,QAAT,CAP6B,CAAhC;;AAQAZ,EAAAA,eAAe,CAAE0B,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;;AACAT,IAAAA,YAAY;;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAJc,CAAf;AAMAjC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEyB,MAAAA,IAAF;AAAQW,MAAAA,SAAR;AAAmBC,MAAAA,QAAnB;AAA6BC,MAAAA;AAA7B,QAAoCxB,QAAQ,CAACG,KAAnD;;AACA,QAAIQ,IAAI,KAAK,KAAb,EAAoB;AAClBd,MAAAA,MAAM,CAACgB,UAAP,CAAkB,QAAlB,EACGY,GADH,CACO;AACHH,QAAAA,SAAS,EAAEA,SADR;AAEHnB,QAAAA,KAAK,EAAEoB;AAFJ,OADP,EAKGP,IALH,CAKSC,GAAD,IAAS;AACbhB,QAAAA,QAAQ,CAAC;AACPU,UAAAA,IAAI,EAAE,mBADC;AAEPe,UAAAA,OAAO,EAAET,GAAG,CAACO;AAFN,SAAD,CAAR;AAID,OAVH,EAWGG,KAXH,CAWUC,GAAD,IAAS;AACdV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,OAbH;AAcD,KAfD,MAeO;AACL/B,MAAAA,MAAM,CAACgB,UAAP,CAAkB,QAAlB,EACGC,GADH,CACOU,EADP,EAEGK,GAFH,GAGGb,IAHH,CAGSc,MAAD,IAAY;AAChBZ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAlB,QAAAA,QAAQ,CAAC;AACPU,UAAAA,IAAI,EAAE,wBADC;AAEPe,UAAAA,OAAO,EAAEI,MAAM,CAACC,IAAP,GAAczB;AAFhB,SAAD,CAAR;AAID,OATH;AAUAL,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAE,mBADC;AAEPe,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID;;AACD,WAAO,MAAM,CAAE,CAAf;AACD,GAlCQ,EAkCN,CAACvB,QAAD,EAAWD,QAAX,CAlCM,CAAT;AAmCA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbY,QAAAA,YAAY;;AACZ,eAAO,oBAAP;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEH,OAApB;AAA6B,UAAA,MAAM,EAAEP;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEM,IAAb;AAAmB,QAAA,OAAO,EAAEC,OAA5B;AAAqC,QAAA,MAAM,EAAEP;AAA7C;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAkBD;;GA3EQH,M;UACUP,W,EACFC,W,EACEA,W,EAajBC,e;;;KAhBOK,M;AA6ET,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./css/index.css\";\nimport EdiHeader from \"./components/EdiHeader\";\nimport Screen from \"./components/Screen\";\nimport Popup from \"./components/Popup\";\nimport Header from \"../Header/Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useBeforeunload } from \"react-beforeunload\";\nimport { Prompt } from \"react-router-dom\";\nimport firebaseApp from \"../config/firebaseApp\";\nconst Fstore = firebaseApp.firestore();\nfunction Editor({ location }) {\n  const dispatch = useDispatch();\n  const temKey = useSelector((state) => state.database.key);\n  const template = useSelector((state) => state.database.editor);\n  const [isUp, setIsUp] = useState({\n    status: false,\n    type: \"\",\n  });\n  const __updateData = useCallback(() => {\n    Fstore.collection(\"editor\")\n      .doc(temKey)\n      .update({ template: template })\n      .then((res) => {\n        console.log(res);\n      });\n  }, [temKey, template]);\n  useBeforeunload((e) => {\n    e.preventDefault();\n    __updateData();\n    console.log(\"무슨일이고?\");\n  });\n\n  useEffect(() => {\n    const { type, timestamp, category, id } = location.state;\n    if (type === \"new\") {\n      Fstore.collection(\"editor\")\n        .add({\n          timestamp: timestamp,\n          state: category,\n        })\n        .then((res) => {\n          dispatch({\n            type: \"@layouts/INIT_KEY\",\n            payload: res.id,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      Fstore.collection(\"editor\")\n        .doc(id)\n        .get()\n        .then((result) => {\n          console.log(\"불러옴\");\n          dispatch({\n            type: \"@layouts/CHANGE_EDITOR\",\n            payload: result.data().template,\n          });\n        });\n      dispatch({\n        type: \"@layouts/INIT_KEY\",\n        payload: id,\n      });\n    }\n    return () => {};\n  }, [dispatch, location]);\n  return (\n    <>\n      <Prompt\n        message={() => {\n          __updateData();\n          return \"템플릿을 저장하고 나가시겠습니까?\";\n        }}\n      />\n      <div className=\"editor\">\n        <Header />\n        <div className=\"editor-wrapper\">\n          <EdiHeader setIsUp={setIsUp} temKey={temKey} />\n          <Screen temKey={temKey} />\n        </div>\n        <Popup isUp={isUp} setIsUp={setIsUp} temKey={temKey} />\n      </div>\n    </>\n  );\n}\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}