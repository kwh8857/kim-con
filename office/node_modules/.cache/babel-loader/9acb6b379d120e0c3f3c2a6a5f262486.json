{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Template/TemplateTitle.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TemplateTitle({\n  data,\n  idx,\n  provided,\n  setFocus,\n  focusIdx,\n  __delete\n}) {\n  _s();\n\n  const contentRef = useRef(null);\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.test.editor);\n  useEffect(() => {\n    if (data && focusIdx !== idx) {\n      contentRef.current.innerHTML = data;\n    }\n\n    return () => {};\n  }, [data, idx, focusIdx]);\n  useEffect(() => {\n    console.log(\"괜찬은거니?\");\n    contentRef.current.innerHTML = data;\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: `popo-${idx}`,\n    className: \"template-title\",\n    ref: provided.innerRef,\n    ...provided.draggableProps,\n    ...provided.dragHandleProps,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dnd-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/projects/dnd-icon.svg\",\n        alt: \"\\uC6D0\\uD558\\uB294 \\uC704\\uCE58\\uB85C \\uC774\\uB3D9\\uD574\\uBCF4\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"con-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"text-line\",\n        contentEditable: true,\n        ref: contentRef,\n        suppressContentEditableWarning: true,\n        onFocus: () => {\n          setFocus(idx);\n        },\n        onInput: e => {\n          dispatch({\n            type: \"@layouts/CHANGE_TITLE\",\n            payload: contentRef.current.innerHTML,\n            idx\n          });\n        },\n        onSelect: e => {\n          const select = window.getSelection();\n          const style = window.getComputedStyle(select.focusNode.parentNode);\n          const fontSize = parseInt(style.fontSize);\n          const align = style.textAlign;\n          const bold = document.queryCommandState(\"bold\");\n          const underline = document.queryCommandState(\"underline\");\n          const color = document.queryCommandValue(\"ForeColor\");\n\n          if (select.focusNode.localName === undefined && fontSize !== status.size) {\n            dispatch({\n              type: \"@test/CHANGE_SIZE\",\n              payload: fontSize\n            });\n          }\n\n          if (underline !== status.underline) {\n            dispatch({\n              type: \"@test/CHANGE_UNDER\",\n              payload: underline\n            });\n          }\n\n          if (bold !== status.bold) {\n            dispatch({\n              type: \"@test/CHANGE_BOLD\",\n              payload: bold\n            });\n          }\n\n          if (align !== status.align && align !== \"start\") {\n            dispatch({\n              type: \"@test/CHANGE_ALIGN\",\n              payload: align\n            });\n          }\n\n          if (color !== status.color) {\n            dispatch({\n              type: \"@test/CHANGE_COLOR\",\n              payload: color\n            });\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TemplateTitle, \"VXNipC45OGtniGUcFL/HkzTij6w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TemplateTitle;\nexport default TemplateTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemplateTitle\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Template/TemplateTitle.jsx"],"names":["React","useEffect","useRef","useSelector","useDispatch","TemplateTitle","data","idx","provided","setFocus","focusIdx","__delete","contentRef","dispatch","status","state","test","editor","current","innerHTML","console","log","innerRef","draggableProps","dragHandleProps","e","type","payload","select","window","getSelection","style","getComputedStyle","focusNode","parentNode","fontSize","parseInt","align","textAlign","bold","document","queryCommandState","underline","color","queryCommandValue","localName","undefined","size"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction TemplateTitle({ data, idx, provided, setFocus, focusIdx, __delete }) {\n  const contentRef = useRef(null);\n  const dispatch = useDispatch();\n  const status = useSelector((state) => state.test.editor);\n\n  useEffect(() => {\n    if (data && focusIdx !== idx) {\n      contentRef.current.innerHTML = data;\n    }\n    return () => {};\n  }, [data, idx, focusIdx]);\n  useEffect(() => {\n    console.log(\"괜찬은거니?\");\n    contentRef.current.innerHTML = data;\n    return () => {};\n  }, []);\n  return (\n    <div\n      id={`popo-${idx}`}\n      className=\"template-title\"\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n    >\n      <div className=\"dnd-icon\">\n        <img\n          src=\"/assets/projects/dnd-icon.svg\"\n          alt=\"원하는 위치로 이동해보세요!\"\n        />\n      </div>\n      <div className=\"con-wrapper\">\n        <p\n          id=\"text-line\"\n          contentEditable={true}\n          ref={contentRef}\n          suppressContentEditableWarning={true}\n          onFocus={() => {\n            setFocus(idx);\n          }}\n          onInput={(e) => {\n            dispatch({\n              type: \"@layouts/CHANGE_TITLE\",\n              payload: contentRef.current.innerHTML,\n              idx,\n            });\n          }}\n          onSelect={(e) => {\n            const select = window.getSelection();\n            const style = window.getComputedStyle(select.focusNode.parentNode);\n            const fontSize = parseInt(style.fontSize);\n            const align = style.textAlign;\n            const bold = document.queryCommandState(\"bold\");\n            const underline = document.queryCommandState(\"underline\");\n            const color = document.queryCommandValue(\"ForeColor\");\n            if (\n              select.focusNode.localName === undefined &&\n              fontSize !== status.size\n            ) {\n              dispatch({\n                type: \"@test/CHANGE_SIZE\",\n                payload: fontSize,\n              });\n            }\n            if (underline !== status.underline) {\n              dispatch({\n                type: \"@test/CHANGE_UNDER\",\n                payload: underline,\n              });\n            }\n            if (bold !== status.bold) {\n              dispatch({\n                type: \"@test/CHANGE_BOLD\",\n                payload: bold,\n              });\n            }\n            if (align !== status.align && align !== \"start\") {\n              dispatch({\n                type: \"@test/CHANGE_ALIGN\",\n                payload: align,\n              });\n            }\n            if (color !== status.color) {\n              dispatch({\n                type: \"@test/CHANGE_COLOR\",\n                payload: color,\n              });\n            }\n          }}\n        ></p>\n      </div>\n    </div>\n  );\n}\n\nexport default TemplateTitle;\n"]},"metadata":{},"sourceType":"module"}