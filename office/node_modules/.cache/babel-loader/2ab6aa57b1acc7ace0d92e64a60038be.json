{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Video.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport VideoCard from \"./VideoCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebaseApp from \"../../config/firebaseApp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fstorage = firebaseApp.storage();\nconst Fstore = firebaseApp.firestore();\n\nfunction Video({\n  __close,\n  template,\n  temKey\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const List = useSelector(state => state.database.videolist);\n  const [selectList, setSelectList] = useState([]);\n\n  const __deleteList = useCallback(idx => {\n    const arr = List.slice();\n    arr.splice(idx, 1);\n    dispatch({\n      type: \"@layouts/INIT_VIDEO\",\n      payload: arr\n    });\n  }, [List, dispatch]);\n\n  const __updateTemplate = useCallback(() => {\n    let arr = template.slice();\n    selectList.forEach(item => {\n      arr.push({\n        type: \"VIDEO\",\n        content: item,\n        id: `video-${new Date().getTime() - Math.floor(Math.random() * (100 - 1 + 1)) + 1}`\n      });\n    });\n    dispatch({\n      type: \"@layouts/CHANGE_EDITOR\",\n      payload: arr\n    });\n\n    __close();\n  }, [selectList, template, __close, dispatch]);\n\n  const __selectVideo = useCallback(content => {\n    const arr = selectList.slice();\n    const number = arr.indexOf(content);\n\n    if (number < 0) {\n      arr.push(content);\n    } else {\n      arr.splice(number, 1);\n    }\n\n    setSelectList(arr);\n  }, [selectList]);\n\n  const __updateUpload = useCallback((idx, upload, name, thumbnail) => {\n    dispatch({\n      type: \"@layouts/UPDATE_VIDEO\",\n      idx,\n      payload: {\n        upload,\n        name,\n        thumbnail\n      }\n    });\n  }, [dispatch]);\n\n  const __updateList = useCallback((idx, url, name, thumbnail) => {\n    dispatch({\n      type: \"@layouts/UPDATE_VIDEO\",\n      payload: {\n        url,\n        name,\n        thumbnail\n      },\n      idx\n    });\n  }, [dispatch]);\n\n  const __uploadVideo = useCallback(e => {\n    const arr = List.slice();\n    let fileList = Object.values(e.target.files);\n    fileList.forEach(item => {\n      arr.push(item);\n    });\n    dispatch({\n      type: \"@layouts/INIT_VIDEO\",\n      payload: arr\n    });\n  }, [List, dispatch]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-wrapper video\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/assets/editor/cancel.svg\",\n      alt: \"\",\n      className: \"cancel\",\n      onClick: __close\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-title\",\n      children: \"\\uB3D9\\uC601\\uC0C1 \\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"list-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/editor/video-file.svg\",\n        alt: \"\\uBE44\\uB514\\uC624 \\uC5C5\\uB85C\\uB4DC\",\n        className: \"video-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-file-title\",\n        children: \"\\uD30C\\uC77C\\uC744 \\uC120\\uD0DD \\uB610\\uB294 \\uB4DC\\uB798\\uADF8\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          opacity: 0\n        },\n        multiple: true,\n        accept: \"video/*\",\n        onChange: __uploadVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-card-wrapper\",\n      children: List.map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(VideoCard, {\n          data: item,\n          __upload: __updateUpload,\n          __delete: __deleteList,\n          __update: __updateList,\n          __select: __selectVideo,\n          selectList: selectList,\n          idx: idx,\n          temKey: temKey\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"link-btn\",\n      style: selectList.length > 0 ? undefined : {\n        backgroundColor: \"grey\"\n      },\n      onClick: () => {\n        if (selectList.length > 0) {\n          __updateTemplate();\n        }\n      },\n      children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"3gGXlOf7J0T2MFQUuIXCJJR/Jd4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Video.jsx"],"names":["React","useState","useCallback","VideoCard","useDispatch","useSelector","firebaseApp","Fstorage","storage","Fstore","firestore","Video","__close","template","temKey","dispatch","List","state","database","videolist","selectList","setSelectList","__deleteList","idx","arr","slice","splice","type","payload","__updateTemplate","forEach","item","push","content","id","Date","getTime","Math","floor","random","__selectVideo","number","indexOf","__updateUpload","upload","name","thumbnail","__updateList","url","__uploadVideo","e","fileList","Object","values","target","files","opacity","map","length","undefined","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport VideoCard from \"./VideoCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebaseApp from \"../../config/firebaseApp\";\n\nconst Fstorage = firebaseApp.storage();\nconst Fstore = firebaseApp.firestore();\nfunction Video({ __close, template, temKey }) {\n  const dispatch = useDispatch();\n  const List = useSelector((state) => state.database.videolist);\n\n  const [selectList, setSelectList] = useState([]);\n  const __deleteList = useCallback(\n    (idx) => {\n      const arr = List.slice();\n      arr.splice(idx, 1);\n      dispatch({\n        type: \"@layouts/INIT_VIDEO\",\n        payload: arr,\n      });\n    },\n    [List, dispatch]\n  );\n  const __updateTemplate = useCallback(() => {\n    let arr = template.slice();\n    selectList.forEach((item) => {\n      arr.push({\n        type: \"VIDEO\",\n        content: item,\n        id: `video-${\n          new Date().getTime() - Math.floor(Math.random() * (100 - 1 + 1)) + 1\n        }`,\n      });\n    });\n    dispatch({\n      type: \"@layouts/CHANGE_EDITOR\",\n      payload: arr,\n    });\n    __close();\n  }, [selectList, template, __close, dispatch]);\n  const __selectVideo = useCallback(\n    (content) => {\n      const arr = selectList.slice();\n      const number = arr.indexOf(content);\n      if (number < 0) {\n        arr.push(content);\n      } else {\n        arr.splice(number, 1);\n      }\n      setSelectList(arr);\n    },\n    [selectList]\n  );\n  const __updateUpload = useCallback(\n    (idx, upload, name, thumbnail) => {\n      dispatch({\n        type: \"@layouts/UPDATE_VIDEO\",\n        idx,\n        payload: {\n          upload,\n          name,\n          thumbnail,\n        },\n      });\n    },\n    [dispatch]\n  );\n  const __updateList = useCallback(\n    (idx, url, name, thumbnail) => {\n      dispatch({\n        type: \"@layouts/UPDATE_VIDEO\",\n        payload: {\n          url,\n          name,\n          thumbnail,\n        },\n        idx,\n      });\n    },\n    [dispatch]\n  );\n  const __uploadVideo = useCallback(\n    (e) => {\n      const arr = List.slice();\n      let fileList = Object.values(e.target.files);\n      fileList.forEach((item) => {\n        arr.push(item);\n      });\n      dispatch({\n        type: \"@layouts/INIT_VIDEO\",\n        payload: arr,\n      });\n    },\n    [List, dispatch]\n  );\n  return (\n    <div className=\"popup-wrapper video\">\n      <img\n        src=\"/assets/editor/cancel.svg\"\n        alt=\"\"\n        className=\"cancel\"\n        onClick={__close}\n      />\n      <div className=\"popup-title\">동영상 업로드</div>\n      <label className=\"list-wrapper\">\n        <img\n          src=\"/assets/editor/video-file.svg\"\n          alt=\"비디오 업로드\"\n          className=\"video-icon\"\n        />\n        <div className=\"video-file-title\">파일을 선택 또는 드래그해주세요</div>\n        <input\n          type=\"file\"\n          style={{ opacity: 0 }}\n          multiple={true}\n          accept=\"video/*\"\n          onChange={__uploadVideo}\n        />\n      </label>\n      <div className=\"video-card-wrapper\">\n        {List.map((item, idx) => {\n          return (\n            <VideoCard\n              key={idx}\n              data={item}\n              __upload={__updateUpload}\n              __delete={__deleteList}\n              __update={__updateList}\n              __select={__selectVideo}\n              selectList={selectList}\n              idx={idx}\n              temKey={temKey}\n            />\n          );\n        })}\n      </div>\n      <div\n        className=\"link-btn\"\n        style={selectList.length > 0 ? undefined : { backgroundColor: \"grey\" }}\n        onClick={() => {\n          if (selectList.length > 0) {\n            __updateTemplate();\n          }\n        }}\n      >\n        등록하기\n      </div>\n    </div>\n  );\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}