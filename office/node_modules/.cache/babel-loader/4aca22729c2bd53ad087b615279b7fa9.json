{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Template/TemplateImage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport TemplateEmty from \"./TemplateEmty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TemplateImage({\n  data: {\n    resize,\n    url\n  },\n  provided,\n  setFocus,\n  focusIdx,\n  idx,\n  template\n}) {\n  _s();\n\n  useEffect(() => {\n    console.log(1080 / 720 * 100);\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [idx === 0 ? /*#__PURE__*/_jsxDEV(TemplateEmty, {\n      idx: idx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 20\n    }, this) : undefined, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `template-img ${focusIdx === idx ? \"active-blue\" : \"\"}`,\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      onClick: () => {\n        setFocus(idx);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: \"\\uC774\\uBBF8\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), !template[idx + 1] || template[idx + 1].type !== \"TITLE\" ? /*#__PURE__*/_jsxDEV(TemplateEmty, {\n      idx: idx + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : undefined]\n  }, void 0, true);\n}\n\n_s(TemplateImage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TemplateImage;\nexport default TemplateImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemplateImage\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/aju-office/src/components/Editor/components/Template/TemplateImage.jsx"],"names":["React","useEffect","TemplateEmty","TemplateImage","data","resize","url","provided","setFocus","focusIdx","idx","template","console","log","undefined","innerRef","draggableProps","dragHandleProps","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,SAASC,aAAT,CAAuB;AACrBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GADe;AAErBC,EAAAA,QAFqB;AAGrBC,EAAAA,QAHqB;AAIrBC,EAAAA,QAJqB;AAKrBC,EAAAA,GALqB;AAMrBC,EAAAA;AANqB,CAAvB,EAOG;AAAA;;AACDV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAa,OAAO,GAAR,GAAe,GAA3B;AACA,WAAO,MAAM,CAAE,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACE;AAAA,eACGH,GAAG,KAAK,CAAR,gBAAY,QAAC,YAAD;AAAc,MAAA,GAAG,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAZ,GAAyCI,SAD5C,eAEE;AACE,MAAA,SAAS,EAAG,gBAAeL,QAAQ,KAAKC,GAAb,GAAmB,aAAnB,GAAmC,EAAG,EADnE;AAEE,MAAA,GAAG,EAAEH,QAAQ,CAACQ,QAFhB;AAAA,SAGMR,QAAQ,CAACS,cAHf;AAAA,SAIMT,QAAQ,CAACU,eAJf;AAKE,MAAA,OAAO,EAAE,MAAM;AACbT,QAAAA,QAAQ,CAACE,GAAD,CAAR;AACD,OAPH;AAAA,6BASE;AAAK,QAAA,GAAG,EAAEJ,GAAV;AAAe,QAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YAFF,EAaG,CAACK,QAAQ,CAACD,GAAG,GAAG,CAAP,CAAT,IAAsBC,QAAQ,CAACD,GAAG,GAAG,CAAP,CAAR,CAAkBQ,IAAlB,KAA2B,OAAjD,gBACC,QAAC,YAAD;AAAc,MAAA,GAAG,EAAER,GAAG,GAAG;AAAzB;AAAA;AAAA;AAAA;AAAA,YADD,GAEGI,SAfN;AAAA,kBADF;AAmBD;;GA/BQX,a;;KAAAA,a;AAiCT,eAAeA,aAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport TemplateEmty from \"./TemplateEmty\";\n\nfunction TemplateImage({\n  data: { resize, url },\n  provided,\n  setFocus,\n  focusIdx,\n  idx,\n  template,\n}) {\n  useEffect(() => {\n    console.log((1080 / 720) * 100);\n    return () => {};\n  }, []);\n  return (\n    <>\n      {idx === 0 ? <TemplateEmty idx={idx} /> : undefined}\n      <div\n        className={`template-img ${focusIdx === idx ? \"active-blue\" : \"\"}`}\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        onClick={() => {\n          setFocus(idx);\n        }}\n      >\n        <img src={url} alt=\"이미지\" />\n      </div>\n      {!template[idx + 1] || template[idx + 1].type !== \"TITLE\" ? (\n        <TemplateEmty idx={idx + 1} />\n      ) : undefined}\n    </>\n  );\n}\n\nexport default TemplateImage;\n"]},"metadata":{},"sourceType":"module"}