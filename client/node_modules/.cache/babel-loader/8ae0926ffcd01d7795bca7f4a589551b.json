{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/kim-con/client/src/components/Request/components/Infoinput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Infoinput({\n  title,\n  type,\n  content,\n  placeholder\n}) {\n  _s();\n\n  const inputRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [title, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: content,\n      placeholder: placeholder,\n      ref: inputRef,\n      onChange: e => {\n        const number = e.target.value.replace(/[^0-9-]/gi, \"\");\n        const val = number.replace(/(\\d{3})(\\d{2})(\\d{6})/, \"$1-$2-$3\");\n        inputRef.current.value = val;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Infoinput, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n\n_c = Infoinput;\nexport default Infoinput;\n\nvar _c;\n\n$RefreshReg$(_c, \"Infoinput\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/kim-con/client/src/components/Request/components/Infoinput.jsx"],"names":["React","useRef","Infoinput","title","type","content","placeholder","inputRef","e","number","target","value","replace","val","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA;AAAxB,CAAnB,EAA0D;AAAA;;AACxD,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACGE,KADH,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AACE,MAAA,IAAI,EAAEE,OADR;AAEE,MAAA,WAAW,EAAEC,WAFf;AAGE,MAAA,GAAG,EAAEC,QAHP;AAIE,MAAA,QAAQ,EAAGC,CAAD,IAAO;AACf,cAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,WAAvB,EAAoC,EAApC,CAAf;AACA,cAAMC,GAAG,GAAGJ,MAAM,CAACG,OAAP,CAAe,uBAAf,EAAwC,UAAxC,CAAZ;AACAL,QAAAA,QAAQ,CAACO,OAAT,CAAiBH,KAAjB,GAAyBE,GAAzB;AACD;AARH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GApBQX,S;;KAAAA,S;AAsBT,eAAeA,SAAf","sourcesContent":["import React, { useRef } from \"react\";\n\nfunction Infoinput({ title, type, content, placeholder }) {\n  const inputRef = useRef(null);\n  return (\n    <div className=\"info-input\">\n      <div className=\"title\">\n        {title}\n        <div className=\"circle\" />\n      </div>\n      <input\n        type={content}\n        placeholder={placeholder}\n        ref={inputRef}\n        onChange={(e) => {\n          const number = e.target.value.replace(/[^0-9-]/gi, \"\");\n          const val = number.replace(/(\\d{3})(\\d{2})(\\d{6})/, \"$1-$2-$3\");\n          inputRef.current.value = val;\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Infoinput;\n"]},"metadata":{},"sourceType":"module"}