{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useCallback, useEffect } from \"react\";\n\nconst useScrollFadeIn = delay => {\n  _s();\n\n  const dom = useRef();\n  const handleScroll = useCallback(([entry]) => {\n    const {\n      current\n    } = dom;\n\n    if (entry.isIntersecting) {\n      current.style.transitionProperty = \"opacity ,transform\";\n      current.style.transitionDuration = \"1s\";\n      current.style.transitionTimingFunction = \"ease\";\n      current.style.transitionDelay = `${delay}s`;\n      current.style.opacity = 1;\n      current.style.transform = \"translate3d(0, 0, 0)\";\n    }\n  }, [dom, delay]);\n  useEffect(() => {\n    let observer;\n    const {\n      current\n    } = dom;\n\n    if (current) {\n      observer = new IntersectionObserver(handleScroll, {\n        threshold: 0.1\n      });\n      observer.observe(current);\n      return () => observer && observer.disconnect();\n    }\n  }, [handleScroll]);\n  return {\n    ref: dom,\n    style: {\n      opacity: 0,\n      transform: \"translate3d(0, 30%, 0)\"\n    }\n  };\n};\n\n_s(useScrollFadeIn, \"n7jokSJEQ/F7j7MC1AK9uCOvYGs=\");\n\nexport default useScrollFadeIn;","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/kim-con/src/lib/useScrollFadeIn.js"],"names":["useRef","useCallback","useEffect","useScrollFadeIn","delay","dom","handleScroll","entry","current","isIntersecting","style","transitionProperty","transitionDuration","transitionTimingFunction","transitionDelay","opacity","transform","observer","IntersectionObserver","threshold","observe","disconnect","ref"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,QAA+C,OAA/C;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAMC,GAAG,GAAGL,MAAM,EAAlB;AAEA,QAAMM,YAAY,GAAGL,WAAW,CAC9B,CAAC,CAACM,KAAD,CAAD,KAAa;AACX,UAAM;AAAEC,MAAAA;AAAF,QAAcH,GAApB;;AACA,QAAIE,KAAK,CAACE,cAAV,EAA0B;AACxBD,MAAAA,OAAO,CAACE,KAAR,CAAcC,kBAAd,GAAmC,oBAAnC;AACAH,MAAAA,OAAO,CAACE,KAAR,CAAcE,kBAAd,GAAmC,IAAnC;AACAJ,MAAAA,OAAO,CAACE,KAAR,CAAcG,wBAAd,GAAyC,MAAzC;AACAL,MAAAA,OAAO,CAACE,KAAR,CAAcI,eAAd,GAAiC,GAAEV,KAAM,GAAzC;AACAI,MAAAA,OAAO,CAACE,KAAR,CAAcK,OAAd,GAAwB,CAAxB;AACAP,MAAAA,OAAO,CAACE,KAAR,CAAcM,SAAd,GAA0B,sBAA1B;AACD;AACF,GAX6B,EAY9B,CAACX,GAAD,EAAMD,KAAN,CAZ8B,CAAhC;AAeAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,QAAJ;AACA,UAAM;AAAET,MAAAA;AAAF,QAAcH,GAApB;;AAEA,QAAIG,OAAJ,EAAa;AACXS,MAAAA,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBZ,YAAzB,EAAuC;AAChDa,QAAAA,SAAS,EAAE;AADqC,OAAvC,CAAX;AAGAF,MAAAA,QAAQ,CAACG,OAAT,CAAiBZ,OAAjB;AAEA,aAAO,MAAMS,QAAQ,IAAIA,QAAQ,CAACI,UAAT,EAAzB;AACD;AACF,GAZQ,EAYN,CAACf,YAAD,CAZM,CAAT;AAcA,SAAO;AACLgB,IAAAA,GAAG,EAAEjB,GADA;AAELK,IAAAA,KAAK,EAAE;AACLK,MAAAA,OAAO,EAAE,CADJ;AAELC,MAAAA,SAAS,EAAE;AAFN;AAFF,GAAP;AAOD,CAvCD;;GAAMb,e;;AAyCN,eAAeA,eAAf","sourcesContent":["import { useRef, useCallback, useEffect } from \"react\";\n\nconst useScrollFadeIn = (delay) => {\n  const dom = useRef();\n\n  const handleScroll = useCallback(\n    ([entry]) => {\n      const { current } = dom;\n      if (entry.isIntersecting) {\n        current.style.transitionProperty = \"opacity ,transform\";\n        current.style.transitionDuration = \"1s\";\n        current.style.transitionTimingFunction = \"ease\";\n        current.style.transitionDelay = `${delay}s`;\n        current.style.opacity = 1;\n        current.style.transform = \"translate3d(0, 0, 0)\";\n      }\n    },\n    [dom, delay]\n  );\n\n  useEffect(() => {\n    let observer;\n    const { current } = dom;\n\n    if (current) {\n      observer = new IntersectionObserver(handleScroll, {\n        threshold: 0.1,\n      });\n      observer.observe(current);\n\n      return () => observer && observer.disconnect();\n    }\n  }, [handleScroll]);\n\n  return {\n    ref: dom,\n    style: {\n      opacity: 0,\n      transform: \"translate3d(0, 30%, 0)\",\n    },\n  };\n};\n\nexport default useScrollFadeIn;\n"]},"metadata":{},"sourceType":"module"}