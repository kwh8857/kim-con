{"ast":null,"code":"var _jsxFileName = \"/Users/gwagbyeongjun/Sourcecode/react/kim-con/src/components/Main/components/SendBtn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.button`\n  cursor: pointer;\n  width: 321px;\n  height: 80px;\n  border-radius: 50px;\n  color: white;\n  font-size: 22px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  ${props => {\n  return css`\n      background-color: ${props.isOn ? \"#47d99b\" : \"#dbdbdb\"};\n    `;\n}}\n`;\n_c = Wrapper;\n\nfunction SendBtn() {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.database.ask);\n  const [isOn, setIsOn] = useState(false);\n  const send = useCallback(() => {\n    dispatch({\n      type: \"config/isPopup\",\n      payload: true\n    });\n  }, [dispatch]);\n  useEffect(() => {\n    const {\n      name,\n      category,\n      tel,\n      email,\n      number,\n      content,\n      agree\n    } = data;\n\n    if (name.length > 0 && category.length > 0 && email.length > 0 && number > 0 && content.length > 0 && agree && tel.length === 13) {\n      setIsOn(true);\n    } else {\n      setIsOn(false);\n    }\n\n    return () => {};\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    isOn: isOn,\n    onClick: send,\n    children: \"\\uAE40\\uACFC\\uC7A5\\uC5D0\\uAC8C \\uBB38\\uC758\\uD558\\uAE30\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SendBtn, \"+lYc5l5d79EmkKX29TDT43NSZvE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = SendBtn;\nexport default SendBtn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"SendBtn\");","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/kim-con/src/components/Main/components/SendBtn.jsx"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","styled","css","Wrapper","button","props","isOn","SendBtn","dispatch","data","state","database","ask","setIsOn","send","type","payload","name","category","tel","email","number","content","agree","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;;AACA,MAAMC,OAAO,GAAGF,MAAM,CAACG,MAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAKC,KAAD,IAAW;AACX,SAAOH,GAAI;AACf,0BAA0BG,KAAK,CAACC,IAAN,GAAa,SAAb,GAAyB,SAAU;AAC7D,KAFI;AAGD,CAAC;AACJ,CAjBA;KAAMH,O;;AAkBN,SAASI,OAAT,GAAmB;AAAA;;AACjB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,GAA3B,CAAxB;AACA,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMgB,IAAI,GAAGlB,WAAW,CAAC,MAAM;AAC7BY,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALuB,EAKrB,CAACR,QAAD,CALqB,CAAxB;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEoB,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA,GAAlB;AAAuBC,MAAAA,KAAvB;AAA8BC,MAAAA,MAA9B;AAAsCC,MAAAA,OAAtC;AAA+CC,MAAAA;AAA/C,QAAyDd,IAA/D;;AACA,QACEQ,IAAI,CAACO,MAAL,GAAc,CAAd,IACAN,QAAQ,CAACM,MAAT,GAAkB,CADlB,IAEAJ,KAAK,CAACI,MAAN,GAAe,CAFf,IAGAH,MAAM,GAAG,CAHT,IAIAC,OAAO,CAACE,MAAR,GAAiB,CAJjB,IAKAD,KALA,IAMAJ,GAAG,CAACK,MAAJ,KAAe,EAPjB,EAQE;AACAX,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAVD,MAUO;AACLA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AACD,WAAO,MAAM,CAAE,CAAf;AACD,GAhBQ,EAgBN,CAACJ,IAAD,CAhBM,CAAT;AAiBA,sBACE,QAAC,OAAD;AAAS,IAAA,IAAI,EAAEH,IAAf;AAAqB,IAAA,OAAO,EAAEQ,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlCQP,O;UACUR,W,EACJC,W;;;MAFNO,O;AAoCT,eAAeA,OAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\nconst Wrapper = styled.button`\n  cursor: pointer;\n  width: 321px;\n  height: 80px;\n  border-radius: 50px;\n  color: white;\n  font-size: 22px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  ${(props) => {\n    return css`\n      background-color: ${props.isOn ? \"#47d99b\" : \"#dbdbdb\"};\n    `;\n  }}\n`;\nfunction SendBtn() {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.database.ask);\n  const [isOn, setIsOn] = useState(false);\n\n  const send = useCallback(() => {\n    dispatch({\n      type: \"config/isPopup\",\n      payload: true,\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    const { name, category, tel, email, number, content, agree } = data;\n    if (\n      name.length > 0 &&\n      category.length > 0 &&\n      email.length > 0 &&\n      number > 0 &&\n      content.length > 0 &&\n      agree &&\n      tel.length === 13\n    ) {\n      setIsOn(true);\n    } else {\n      setIsOn(false);\n    }\n    return () => {};\n  }, [data]);\n  return (\n    <Wrapper isOn={isOn} onClick={send}>\n      김과장에게 문의하기\n    </Wrapper>\n  );\n}\n\nexport default SendBtn;\n"]},"metadata":{},"sourceType":"module"}