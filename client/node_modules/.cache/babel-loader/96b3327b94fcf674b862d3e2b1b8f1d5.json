{"ast":null,"code":"import _objectSpread from\"/Users/gwagbyeongjun/Sourcecode/react/kim-con/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actions from\"../actions\";var initialState={data:{},status:\"test\",payload:\"\",isLoading:false,isPopup:false};var config=function config(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actions.SEARCH:return _objectSpread(_objectSpread({},state),{},{payload:action.payload});case actions.SEARCH_SUCCESS:return _objectSpread(_objectSpread({},state),{},{status:action.data});case actions.SEARCH_FAIL:return _objectSpread(_objectSpread({},state),{},{error:action.error});case\"config/isPopup\":return _objectSpread(_objectSpread({},state),{},{isPopup:action.payload});default:return state;}};export default config;","map":{"version":3,"sources":["/Users/gwagbyeongjun/Sourcecode/react/kim-con/client/src/reducers/config/index.js"],"names":["actions","initialState","data","status","payload","isLoading","isPopup","config","state","action","type","SEARCH","SEARCH_SUCCESS","SEARCH_FAIL","error"],"mappings":"0KAAA,MAAO,GAAKA,CAAAA,OAAZ,KAAyB,YAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,EADa,CAEnBC,MAAM,CAAE,MAFW,CAGnBC,OAAO,CAAE,EAHU,CAInBC,SAAS,CAAE,KAJQ,CAKnBC,OAAO,CAAE,KALU,CAArB,CAQA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBP,YAAyB,IAAXQ,CAAAA,MAAW,2CAC/C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKV,CAAAA,OAAO,CAACW,MAAb,CACE,sCACKH,KADL,MAEEJ,OAAO,CAAEK,MAAM,CAACL,OAFlB,GAIF,IAAKJ,CAAAA,OAAO,CAACY,cAAb,CACE,sCACKJ,KADL,MAEEL,MAAM,CAAEM,MAAM,CAACP,IAFjB,GAIF,IAAKF,CAAAA,OAAO,CAACa,WAAb,CACE,sCACKL,KADL,MAEEM,KAAK,CAAEL,MAAM,CAACK,KAFhB,GAIF,IAAK,gBAAL,CACE,sCACKN,KADL,MAEEF,OAAO,CAAEG,MAAM,CAACL,OAFlB,GAIF,QACE,MAAOI,CAAAA,KAAP,CAtBJ,CAwBD,CAzBD,CA0BA,cAAeD,CAAAA,MAAf","sourcesContent":["import * as actions from \"../actions\";\n\nconst initialState = {\n  data: {},\n  status: \"test\",\n  payload: \"\",\n  isLoading: false,\n  isPopup: false,\n};\n\nconst config = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.SEARCH:\n      return {\n        ...state,\n        payload: action.payload,\n      };\n    case actions.SEARCH_SUCCESS:\n      return {\n        ...state,\n        status: action.data,\n      };\n    case actions.SEARCH_FAIL:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case \"config/isPopup\":\n      return {\n        ...state,\n        isPopup: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport default config;\n"]},"metadata":{},"sourceType":"module"}